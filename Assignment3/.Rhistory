as.integer(4.8)
round(4.8)
##Missing values: NA
## load datafile MissingValues_algae.csv
a <- read.csv(file.choose(), header=T)
head(a)
summary(a) ##note NAs
##check for missing values
any(is.na(a))
## number of NAs by column
colSums(is.na(a))
## rows with NA for Chla column
which(is.na(a$Chla))
## rows with NAs for any column
a[!complete.cases(a), ]
nrow(a[!complete.cases(a),])
## note how common R functions deal with NA values
##na.action
table(a$season, round(a$mxPH, 0))
table(a$season, round(a$mxPH, 0), useNA = "always")
table(a$season, round(a$a2, 0))
table(a$season, round(a$a2,0), useNA = "ifany")
table(a$season, round(a$a2,0), useNA = "always")
mean(a$NH4)
mean(a$NH4, na.rm = TRUE)
sort(a$NH4)
length(sort(a$NH4))
sort(a$NH4, na.last = TRUE)
length(sort(a$NH4, na.last = TRUE))   ## NAs are listed last
sort(a$NH4, na.last = FALSE)         ## NAs are listed first
sort(a$NH4, na.last = NA)            ##default (NAs are removed)
##removing NAs from dataframe
aComplete <- a[complete.cases(a), ]
dim(a)
dim(aComplete)
#just remove rows with many NAs
a[!complete.cases(a), ]
hist(a$mxPH, prob = TRUE, breaks = 10, ylim = 0:1)
lines(density(a$mxPH, na.rm = TRUE))
aNew[is.na(aNew$mxPH), "mxPH"] <- mean(a$mxPH, na.rm = TRUE)
aNew <- a[-c(62, 199), ]
aNew[!complete.cases(aNew), ]
aNew[is.na(aNew$mxPH), "mxPH"] <- mean(a$mxPH, na.rm = TRUE)
mean(a$mxPH, na.rm = TRUE)
aNew[48, ]
hist(a$Chla, prob = TRUE, breaks = 20)
boxplot(a$Chla)
mean(a$Chla, na.rm = TRUE)
median(a$Chla, na.rm = TRUE)
hist(a$Chla, prob = TRUE, breaks = 20)
##Regression imputation
cor(a[, 5:19], use = "complete.obs")
symnum(cor(a[, 5:19], use = "complete.obs"))
plot(a$PO4, a$oPO4)
modelPO4 <- lm(a$PO4 ~ a$oPO4)
coef(modelPO4)
aNew[which(is.na(aNew$PO4)), ]
## replace NAs in PO4 column with regression estimate based on oPO4 column
aNew[which(is.na(aNew$PO4)), "PO4"] <- aNew[which(is.na(aNew$PO4)), "oPO4"] * coef(modelPO4)[[2]]  + coef(modelPO4)[[1]]
aNew[28,]
library('earth')
setwd("/Users/fanfan/Documents/2022fallB/GBA436R/Assignment3")
fullFile = read.csv('Student Data 9.csv')
rmse = function(thisModel){
mean((predict(thisModel,validationData)-validationData$card)^2)^.5
}
kfoldtest = function(testFit){
set.seed(354987)
totalFold = 5
foldNum = floor(runif(nrow(fullFile))*totalFold)+1
thisModelRMSE = rep(NA,totalFold)
for(thisFold in 1:totalFold){
trainingData = subset(bankData,foldNum!=thisFold)
validationData = subset(bankData,foldNum==thisFold)
thisModel = update(testFit,data=trainingData)
thisFit = rmse(thisModel)
thisModelRMSE[thisFold] = thisFit
}
return(mean(thisModelRMSE))
}
kfoldtest(earth(card~.),data=fullFile,degree=2,thres=.0001)
library('earth')
setwd("/Users/fanfan/Documents/2022fallB/GBA436R/Assignment3")
fullFile = read.csv('Student Data 9.csv')
rmse = function(thisModel){
mean((predict(thisModel,validationData)-validationData$card)^2)^.5
}
kfoldtest = function(testFit){
set.seed(354987)
totalFold = 5
foldNum = floor(runif(nrow(fullFile))*totalFold)+1
thisModelRMSE = rep(NA,totalFold)
for(thisFold in 1:totalFold){
trainingData = subset(bankData,foldNum!=thisFold)
validationData = subset(bankData,foldNum==thisFold)
thisModel = update(testFit,data=trainingData)
thisFit = rmse(thisModel)
thisModelRMSE[thisFold] = thisFit
}
return(mean(thisModelRMSE))
}
kfoldtest(earth(card~.,data=fullFile,degree=2,thres=.0001))
library('earth')
setwd("/Users/fanfan/Documents/2022fallB/GBA436R/Assignment3")
fullFile = read.csv('Student Data 9.csv')
rmse = function(thisModel){
mean((predict(thisModel,validationData)-validationData$card)^2)^.5
}
kfoldtest = function(testFit){
set.seed(354987)
totalFold = 5
foldNum = floor(runif(nrow(fullFile))*totalFold)+1
thisModelRMSE = rep(NA,totalFold)
for(thisFold in 1:totalFold){
trainingData = subset(fullFile,foldNum!=thisFold)
validationData = subset(fullFile,foldNum==thisFold)
thisModel = update(testFit,data=trainingData)
thisFit = rmse(thisModel)
thisModelRMSE[thisFold] = thisFit
}
return(mean(thisModelRMSE))
}
kfoldtest(earth(card~.,data=fullFile,degree=2,thres=.0001))
library('earth')
setwd("/Users/fanfan/Documents/2022fallB/GBA436R/Assignment3")
fullFile = read.csv('Student Data 9.csv')
rmse = function(thisModel,validationData){
mean((predict(thisModel,validationData)-validationData$card)^2)^.5
}
kfoldtest = function(testFit){
set.seed(354987)
totalFold = 5
foldNum = floor(runif(nrow(fullFile))*totalFold)+1
thisModelRMSE = rep(NA,totalFold)
for(thisFold in 1:totalFold){
trainingData = subset(fullFile,foldNum!=thisFold)
validationData = subset(fullFile,foldNum==thisFold)
thisModel = update(testFit,data=trainingData)
thisFit = rmse(thisModel,validationData)
thisModelRMSE[thisFold] = thisFit
}
return(mean(thisModelRMSE))
}
kfoldtest(earth(card~.,data=fullFile,degree=2,thres=.0001))
library('earth')
setwd("/Users/fanfan/Documents/2022fallB/GBA436R/Assignment3")
fullFile = read.csv('Student Data 9.csv')
rmse = function(thisModel,validationData){
mean((predict(thisModel,validationData)-validationData$card)^2)^.5
}
kfoldtest = function(testFit){
set.seed(666)
totalFold = 5
foldNum = floor(runif(nrow(fullFile))*totalFold)+1
thisModelRMSE = rep(NA,totalFold)
for(thisFold in 1:totalFold){
trainingData = subset(fullFile,foldNum!=thisFold)
validationData = subset(fullFile,foldNum==thisFold)
thisModel = update(testFit,data=trainingData)
thisFit = rmse(thisModel,validationData)
thisModelRMSE[thisFold] = thisFit
}
return(mean(thisModelRMSE))
}
kfoldtest(earth(card~.,data=fullFile,degree=2,thres=.0001))
library('earth')
setwd("/Users/fanfan/Documents/2022fallB/GBA436R/Assignment3")
fullFile = read.csv('Student Data 9.csv')
rmse = function(thisModel,validationData){
mean((predict(thisModel,validationData)-validationData$card)^2)^.5
}
kfoldtest = function(testFit){
set.seed(666)
totalFold = 10
foldNum = floor(runif(nrow(fullFile))*totalFold)+1
thisModelRMSE = rep(NA,totalFold)
for(thisFold in 1:totalFold){
trainingData = subset(fullFile,foldNum!=thisFold)
validationData = subset(fullFile,foldNum==thisFold)
thisModel = update(testFit,data=trainingData)
thisFit = rmse(thisModel,validationData)
thisModelRMSE[thisFold] = thisFit
}
return(mean(thisModelRMSE))
}
kfoldtest(earth(card~.,data=fullFile,degree=2,thres=.0001))
library('earth')
setwd("/Users/fanfan/Documents/2022fallB/GBA436R/Assignment3")
fullFile = read.csv('Student Data 9.csv')
rmse = function(thisModel,validationData){
mean((predict(thisModel,validationData)-validationData$card)^2)^.5
}
kfoldtest = function(testFit){
set.seed(666)
totalFold = 5
foldNum = floor(runif(nrow(fullFile))*totalFold)+1
thisModelRMSE = rep(NA,totalFold)
for(thisFold in 1:totalFold){
trainingData = subset(fullFile,foldNum!=thisFold)
validationData = subset(fullFile,foldNum==thisFold)
thisModel = update(testFit,data=trainingData)
thisFit = rmse(thisModel,validationData)
thisModelRMSE[thisFold] = thisFit
}
return(mean(thisModelRMSE))
}
kfoldtest(earth(card~.,data=fullFile,degree=2,thres=.0001))
